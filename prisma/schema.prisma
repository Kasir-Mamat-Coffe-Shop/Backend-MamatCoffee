// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  email        String        @id @unique @db.VarChar(100)
  first_name   String        @db.VarChar(100)
  last_name    String        @db.VarChar(100)
  password     String        @db.VarChar(100)
  address      String?       @db.VarChar(255)
  birth_date   DateTime?
  image        String?       @db.VarChar(100)
  is_active    IsActive      @default(ACTIVE)
  token        String?       @db.VarChar(100)
  transactions Transaction[]

  @@map("users")
}

model Transaction {
  id                  Int                 @id @default(autoincrement())
  transaction_code    String              @db.VarChar(120)
  transaction_method  TransactionMethod   @default(CASH)
  total               Int
  date                DateTime
  status              String              @db.VarChar(25)
  user                User                @relation(fields: [email], references: [email])
  email               String              @db.VarChar(100)
  transaction_details TransactionDetail[]

  @@map("transactions")
}

model TransactionDetail {
  id             Int          @id @default(autoincrement())
  quantity       Int
  sub_total      Int
  product        Product      @relation(fields: [product_id], references: [id])
  product_id     Int
  transaction    Transaction? @relation(fields: [transaction_id], references: [id])
  transaction_id Int?

  @@map("transaction_details")
}

model Product {
  id                  Int                 @id @default(autoincrement())
  product_name        String              @db.VarChar(100)
  price               Int
  stock               Int
  image               String              @db.VarChar(100)
  category            Category            @relation(fields: [category_id], references: [id])
  category_id         Int
  transaction_details TransactionDetail[]
  temps               Temp[]

  @@map("products")
}

model Category {
  id            Int       @id @default(autoincrement())
  category_name String    @db.VarChar(100)
  products      Product[]

  @@map("categories")
}

model Temp {
  id         Int     @id @default(autoincrement())
  quantity   Int
  sub_total  Int
  product    Product @relation(fields: [product_id], references: [id])
  product_id Int

  @@map("temps")
}

model ExcelData {
  id         Int    @id @default(autoincrement())
  file_name  String @db.VarChar(100)
  excel_link String @db.VarChar(255)

  @@map("excel_data")
}

enum IsActive {
  ACTIVE
  INACTIVE
}

enum TransactionMethod {
  CASH
  QRIS
}
